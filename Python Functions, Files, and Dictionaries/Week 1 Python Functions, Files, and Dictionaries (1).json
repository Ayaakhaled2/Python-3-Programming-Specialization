{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## week 1 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q1) Using the file school_prompt2.txt, find the number of characters in the file and assign that value to the variable num_char.\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('school_prompt2.txt','r')\n",
    "content = file.read(file)\n",
    "num_char = len(content) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q2) Find the number of lines in the file, travel_plans2.txt, and assign it to the variable num_lines."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open(\"travel_plans2.txt\",'r')\n",
    "content = file.readlines(file)\n",
    "num_lines = len(content)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q3) Create a string called first_forty that is comprised of the first 40 characters of emotion_words2.txt."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('emotion_words2.txt','r')\n",
    "content = file.read(file)\n",
    "first_forty = content[:40]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q4) Write code to find out how many lines are in the file emotion_words.txt as shown above. Save this value to the variable num_lines. Do not use the len method."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('emotion_words.txt','r')\n",
    "num_lines = 0 \n",
    "for line in file.readlines():\n",
    "    num_lines += 1 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### course_2_assessment_1\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q1)) The textfile, travel_plans.txt, contains the summer travel plans for someone with some commentary. Find the total number of characters in the file and save to the variable num.\n",
    "\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "# total num of chars : return file as a string \n",
    "file = open('travel_plans.txt','r')\n",
    "content = file.read(file)\n",
    "num = len(content)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q2)) We have provided a file called emotion_words.txt that contains lines of words that describe emotions. Find the total number of words in the file and assign this value to the variable num_words."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('emotion_words.txt','r')\n",
    "content = file.readlines() #read the file as a list of lines  \n",
    "num_words = 0 \n",
    "for line in content:\n",
    "    lines = line.strip().split(' ')\n",
    "    for word in lines :\n",
    "        num_words += 1 \n",
    "print(num_words)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q3) Assign to the variable num_lines the number of lines in the file school_prompt.txt.\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('school_prompt.txt','r')\n",
    "num_lines = len(file.readlines())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q4) Assign the first 30 characters of school_prompt.txt as a string to the variable beginning_chars."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "\n",
    "file = open('school_prompt.txt','r')\n",
    "beginning_chars = file.read()[:30]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q5) Challenge: Using the file school_prompt.txt, assign the third word of every line to a list called three."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "three = [] \n",
    "file = open('school_prompt.txt','r')\n",
    "for line in file.readlines():\n",
    "    #list of lines \n",
    "    # 1) convert each line into a list of string \n",
    "    line_list_of_wrds = line.strip().split(' ')\n",
    "    three.append(line_list_of_wrds[2])\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q6) Challenge: Create a list called emotions that contains the first word of every line in emotion_words.txt."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('emotion_words.txt','r')\n",
    "emotions = [] \n",
    "for line in file.readlines():\n",
    "    line_split = line.strip().split(' ')\n",
    "    emotions.append(line_split[0])\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q7) Assign the first 33 characters from the textfile, travel_plans.txt to the variable first_chars."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('travel_plans.txt','r')\n",
    "\n",
    "first_chars = file.read()[:33]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-- Q8) Challenge: Using the file school_prompt.txt, if the character ‘p’ is in a word, then add the word to a list called p_words.\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "file = open('school_prompt.txt' , 'r')\n",
    "p_words = [] \n",
    "for line in file.readlines():\n",
    "    line_split = line.strip().split()\n",
    "    for word in line_split:\n",
    "        if 'p' in word:\n",
    "            p_words.append(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
